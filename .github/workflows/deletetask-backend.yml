name: Build and Deploy - DeleteTasks Backend

on:
  push:
    branches:
      - main
    paths:
      - "backend/DeleteTasksTodoMicroservice/**"

env:
  BUILD_CONTEXT: ./backend/DeleteTasksTodoMicroservice
  IMAGE_NAME: deletetasks
  CONTAINER_PORT: 80
  ACR_NAME: prodacrdemo
  ACR_LOGIN_SERVER: prodacrdemo.azurecr.io
  RESOURCE_GROUP: prod-aks-rg
  AKS_CLUSTER: prod-aks-demo

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Verify build context
        run: |
          ls -la $BUILD_CONTEXT || exit 1
          test -f "$BUILD_CONTEXT/Dockerfile" || exit 1

      - uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: ACR Login
        run: az acr login --name $ACR_NAME

      - uses: docker/build-push-action@v4
        with:
          context: ${{ env.BUILD_CONTEXT }}
          file: ${{ env.BUILD_CONTEXT }}/Dockerfile
          push: true
          tags: |
            ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Get AKS credentials
        run: az aks get-credentials --resource-group $RESOURCE_GROUP --name $AKS_CLUSTER --overwrite-existing

      - name: Deploy to AKS
        run: |
          kubectl set image deployment/${{ env.IMAGE_NAME }} \
            ${{ env.IMAGE_NAME }}=${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          kubectl rollout status deployment/${{ env.IMAGE_NAME }}
