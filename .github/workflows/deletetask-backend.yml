name: Deploy DeleteTasksTodoMicroservice

on:
  workflow_dispatch:

env:
  BUILD_CONTEXT: ./backend/DeleteTasksTodoMicroservice
  IMAGE_NAME: delete-tasks
  CONTAINER_PORT: 8080

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Verify build context exists
        run: |
          ls -la $BUILD_CONTEXT || (echo "Path not found: $BUILD_CONTEXT" && exit 1)
          test -f "$BUILD_CONTEXT/Dockerfile" || (echo "Dockerfile not found in $BUILD_CONTEXT" && exit 1)

      - name: Azure Login (OIDC)
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: ACR login
        run: az acr login --name ${{ secrets.ACR_NAME }}

      - name: Build & Push to ACR
        uses: docker/build-push-action@v4
        with:
          context: ${{ env.BUILD_CONTEXT }}
          file: ${{ env.BUILD_CONTEXT }}/Dockerfile
          push: true
          tags: |
            ${{ secrets.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ secrets.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: AKS Login
        run: az aks get-credentials --resource-group ${{ secrets.RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER }} --overwrite-existing

      - name: Deploy to AKS
        run: |
          kubectl set image deployment/${{ env.IMAGE_NAME }} ${{ env.IMAGE_NAME }}=${{ secrets.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          kubectl rollout status deployment/${{ env.IMAGE_NAME }}
